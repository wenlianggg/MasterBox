#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MasterBox.Auth
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="MasterBox")]
	public partial class AuthDBControlDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void Insertmb_user(mb_user instance);
    partial void Updatemb_user(mb_user instance);
    partial void Deletemb_user(mb_user instance);
    partial void Insertmb_auth(mb_auth instance);
    partial void Updatemb_auth(mb_auth instance);
    partial void Deletemb_auth(mb_auth instance);
    #endregion
		
		public AuthDBControlDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["MasterBoxConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public AuthDBControlDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public AuthDBControlDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public AuthDBControlDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public AuthDBControlDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<mb_user> mb_users
		{
			get
			{
				return this.GetTable<mb_user>();
			}
		}
		
		public System.Data.Linq.Table<mb_auth> mb_auths
		{
			get
			{
				return this.GetTable<mb_auth>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.mb_users")]
	public partial class mb_user : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _userid;
		
		private System.Data.Linq.Binary _userImage;
		
		private string _fName;
		
		private string _lName;
		
		private System.DateTime _birthDate;
		
		private string _email;
		
		private short _verified;
		
		private string _timeZone;
		
		private System.Nullable<int> _mbrType;
		
		private System.Data.Linq.Binary _regTimestamp;
		
		private System.Nullable<System.DateTime> _mbrStartDate;
		
		private System.Nullable<System.DateTime> _mbrExpireDate;
		
		private EntitySet<mb_auth> _mb_auths;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnuseridChanging(long value);
    partial void OnuseridChanged();
    partial void OnuserImageChanging(System.Data.Linq.Binary value);
    partial void OnuserImageChanged();
    partial void OnfNameChanging(string value);
    partial void OnfNameChanged();
    partial void OnlNameChanging(string value);
    partial void OnlNameChanged();
    partial void OnbirthDateChanging(System.DateTime value);
    partial void OnbirthDateChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void OnverifiedChanging(short value);
    partial void OnverifiedChanged();
    partial void OntimeZoneChanging(string value);
    partial void OntimeZoneChanged();
    partial void OnmbrTypeChanging(System.Nullable<int> value);
    partial void OnmbrTypeChanged();
    partial void OnregTimestampChanging(System.Data.Linq.Binary value);
    partial void OnregTimestampChanged();
    partial void OnmbrStartDateChanging(System.Nullable<System.DateTime> value);
    partial void OnmbrStartDateChanged();
    partial void OnmbrExpireDateChanging(System.Nullable<System.DateTime> value);
    partial void OnmbrExpireDateChanged();
    #endregion
		
		public mb_user()
		{
			this._mb_auths = new EntitySet<mb_auth>(new Action<mb_auth>(this.attach_mb_auths), new Action<mb_auth>(this.detach_mb_auths));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userid", DbType="BigInt NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public long userid
		{
			get
			{
				return this._userid;
			}
			set
			{
				if ((this._userid != value))
				{
					this.OnuseridChanging(value);
					this.SendPropertyChanging();
					this._userid = value;
					this.SendPropertyChanged("userid");
					this.OnuseridChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userImage", DbType="VarBinary(255)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary userImage
		{
			get
			{
				return this._userImage;
			}
			set
			{
				if ((this._userImage != value))
				{
					this.OnuserImageChanging(value);
					this.SendPropertyChanging();
					this._userImage = value;
					this.SendPropertyChanged("userImage");
					this.OnuserImageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fName", DbType="VarChar(100) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string fName
		{
			get
			{
				return this._fName;
			}
			set
			{
				if ((this._fName != value))
				{
					this.OnfNameChanging(value);
					this.SendPropertyChanging();
					this._fName = value;
					this.SendPropertyChanged("fName");
					this.OnfNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lName", DbType="VarChar(100) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string lName
		{
			get
			{
				return this._lName;
			}
			set
			{
				if ((this._lName != value))
				{
					this.OnlNameChanging(value);
					this.SendPropertyChanging();
					this._lName = value;
					this.SendPropertyChanged("lName");
					this.OnlNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_birthDate", DbType="Date NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime birthDate
		{
			get
			{
				return this._birthDate;
			}
			set
			{
				if ((this._birthDate != value))
				{
					this.OnbirthDateChanging(value);
					this.SendPropertyChanging();
					this._birthDate = value;
					this.SendPropertyChanged("birthDate");
					this.OnbirthDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="VarChar(100) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_verified", DbType="SmallInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public short verified
		{
			get
			{
				return this._verified;
			}
			set
			{
				if ((this._verified != value))
				{
					this.OnverifiedChanging(value);
					this.SendPropertyChanging();
					this._verified = value;
					this.SendPropertyChanged("verified");
					this.OnverifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_timeZone", DbType="VarChar(100) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string timeZone
		{
			get
			{
				return this._timeZone;
			}
			set
			{
				if ((this._timeZone != value))
				{
					this.OntimeZoneChanging(value);
					this.SendPropertyChanging();
					this._timeZone = value;
					this.SendPropertyChanged("timeZone");
					this.OntimeZoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mbrType", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> mbrType
		{
			get
			{
				return this._mbrType;
			}
			set
			{
				if ((this._mbrType != value))
				{
					this.OnmbrTypeChanging(value);
					this.SendPropertyChanging();
					this._mbrType = value;
					this.SendPropertyChanged("mbrType");
					this.OnmbrTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_regTimestamp", AutoSync=AutoSync.Always, DbType="rowversion", IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary regTimestamp
		{
			get
			{
				return this._regTimestamp;
			}
			set
			{
				if ((this._regTimestamp != value))
				{
					this.OnregTimestampChanging(value);
					this.SendPropertyChanging();
					this._regTimestamp = value;
					this.SendPropertyChanged("regTimestamp");
					this.OnregTimestampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mbrStartDate", DbType="DateTime2", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> mbrStartDate
		{
			get
			{
				return this._mbrStartDate;
			}
			set
			{
				if ((this._mbrStartDate != value))
				{
					this.OnmbrStartDateChanging(value);
					this.SendPropertyChanging();
					this._mbrStartDate = value;
					this.SendPropertyChanged("mbrStartDate");
					this.OnmbrStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mbrExpireDate", DbType="DateTime2", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> mbrExpireDate
		{
			get
			{
				return this._mbrExpireDate;
			}
			set
			{
				if ((this._mbrExpireDate != value))
				{
					this.OnmbrExpireDateChanging(value);
					this.SendPropertyChanging();
					this._mbrExpireDate = value;
					this.SendPropertyChanged("mbrExpireDate");
					this.OnmbrExpireDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mb_user_mb_auth", Storage="_mb_auths", ThisKey="userid", OtherKey="userid")]
		public EntitySet<mb_auth> mb_auths
		{
			get
			{
				return this._mb_auths;
			}
			set
			{
				this._mb_auths.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_mb_auths(mb_auth entity)
		{
			this.SendPropertyChanging();
			entity.mb_user = this;
		}
		
		private void detach_mb_auths(mb_auth entity)
		{
			this.SendPropertyChanging();
			entity.mb_user = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.mb_auth")]
	public partial class mb_auth : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _username;
		
		private long _userid;
		
		private string _pwd_salt;
		
		private string _login_seed;
		
		private System.DateTime _lastlogin;
		
		private string _totpsecret;
		
		private EntityRef<mb_user> _mb_user;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnusernameChanging(string value);
    partial void OnusernameChanged();
    partial void OnuseridChanging(long value);
    partial void OnuseridChanged();
    partial void Onpwd_saltChanging(string value);
    partial void Onpwd_saltChanged();
    partial void Onlogin_seedChanging(string value);
    partial void Onlogin_seedChanged();
    partial void OnlastloginChanging(System.DateTime value);
    partial void OnlastloginChanged();
    partial void OntotpsecretChanging(string value);
    partial void OntotpsecretChanged();
    #endregion
		
		public mb_auth()
		{
			this._mb_user = default(EntityRef<mb_user>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_username", DbType="VarChar(30) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string username
		{
			get
			{
				return this._username;
			}
			set
			{
				if ((this._username != value))
				{
					this.OnusernameChanging(value);
					this.SendPropertyChanging();
					this._username = value;
					this.SendPropertyChanged("username");
					this.OnusernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userid", DbType="BigInt NOT NULL")]
		public long userid
		{
			get
			{
				return this._userid;
			}
			set
			{
				if ((this._userid != value))
				{
					if (this._mb_user.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnuseridChanging(value);
					this.SendPropertyChanging();
					this._userid = value;
					this.SendPropertyChanged("userid");
					this.OnuseridChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pwd_salt", DbType="VarChar(70) NOT NULL", CanBeNull=false)]
		public string pwd_salt
		{
			get
			{
				return this._pwd_salt;
			}
			set
			{
				if ((this._pwd_salt != value))
				{
					this.Onpwd_saltChanging(value);
					this.SendPropertyChanging();
					this._pwd_salt = value;
					this.SendPropertyChanged("pwd_salt");
					this.Onpwd_saltChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_login_seed", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string login_seed
		{
			get
			{
				return this._login_seed;
			}
			set
			{
				if ((this._login_seed != value))
				{
					this.Onlogin_seedChanging(value);
					this.SendPropertyChanging();
					this._login_seed = value;
					this.SendPropertyChanged("login_seed");
					this.Onlogin_seedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lastlogin", DbType="DateTime NOT NULL")]
		public System.DateTime lastlogin
		{
			get
			{
				return this._lastlogin;
			}
			set
			{
				if ((this._lastlogin != value))
				{
					this.OnlastloginChanging(value);
					this.SendPropertyChanging();
					this._lastlogin = value;
					this.SendPropertyChanged("lastlogin");
					this.OnlastloginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_totpsecret", DbType="VarChar(1)")]
		public string totpsecret
		{
			get
			{
				return this._totpsecret;
			}
			set
			{
				if ((this._totpsecret != value))
				{
					this.OntotpsecretChanging(value);
					this.SendPropertyChanging();
					this._totpsecret = value;
					this.SendPropertyChanged("totpsecret");
					this.OntotpsecretChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mb_user_mb_auth", Storage="_mb_user", ThisKey="userid", OtherKey="userid", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public mb_user mb_user
		{
			get
			{
				return this._mb_user.Entity;
			}
			set
			{
				mb_user previousValue = this._mb_user.Entity;
				if (((previousValue != value) 
							|| (this._mb_user.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._mb_user.Entity = null;
						previousValue.mb_auths.Remove(this);
					}
					this._mb_user.Entity = value;
					if ((value != null))
					{
						value.mb_auths.Add(this);
						this._userid = value.userid;
					}
					else
					{
						this._userid = default(long);
					}
					this.SendPropertyChanged("mb_user");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
